// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using gtMobileDeviceRepairShop.Models;

#nullable disable

namespace gtMobileDeviceRepairShop.Migrations
{
    [DbContext(typeof(RepairShopDBContext))]
    [Migration("20220928191833_updateUserVehicleClasses")]
    partial class updateUserVehicleClasses
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-rc.1.22426.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("gtMobileDeviceRepairShop.Models.Customer", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CustomerId"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("gtMobileDeviceRepairShop.Models.DailyOrderSession", b =>
                {
                    b.Property<long>("DailyOrderSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("DailyOrderSessionId"));

                    b.Property<DateTime>("ClosedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ClosedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("OpenedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OpenedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DailyOrderSessionId");

                    b.ToTable("DailyOrderSessions");
                });

            modelBuilder.Entity("gtMobileDeviceRepairShop.Models.Device", b =>
                {
                    b.Property<long>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("DeviceId"));

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("deviceOperatingSystem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("deviceType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DeviceId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("gtMobileDeviceRepairShop.Models.Repair", b =>
                {
                    b.Property<long>("RepairId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("RepairId"));

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<long>("DailyOrderSessionId")
                        .HasColumnType("bigint");

                    b.Property<long>("DeviceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TechnicianId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RepairId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DailyOrderSessionId");

                    b.HasIndex("DeviceId");

                    b.ToTable("Repairs");
                });

            modelBuilder.Entity("gtMobileDeviceRepairShop.Models.ToDoItem", b =>
                {
                    b.Property<long>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ItemId"));

                    b.Property<bool>("IsComplete")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ItemId");

                    b.ToTable("ToDoItems");
                });

            modelBuilder.Entity("gtMobileDeviceRepairShop.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UserId"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("gtMobileDeviceRepairShop.Models.Vehicles", b =>
                {
                    b.Property<long>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("VehicleId"));

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("VehicleId");

                    b.HasIndex("UserId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("gtMobileDeviceRepairShop.Models.Device", b =>
                {
                    b.HasOne("gtMobileDeviceRepairShop.Models.Customer", "Customer")
                        .WithMany("Devices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("gtMobileDeviceRepairShop.Models.Repair", b =>
                {
                    b.HasOne("gtMobileDeviceRepairShop.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gtMobileDeviceRepairShop.Models.DailyOrderSession", "DailyOrderSession")
                        .WithMany("Repairs")
                        .HasForeignKey("DailyOrderSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gtMobileDeviceRepairShop.Models.Device", "Device")
                        .WithMany("Repairs")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("DailyOrderSession");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("gtMobileDeviceRepairShop.Models.Vehicles", b =>
                {
                    b.HasOne("gtMobileDeviceRepairShop.Models.User", "User")
                        .WithMany("Vehicles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("gtMobileDeviceRepairShop.Models.Customer", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("gtMobileDeviceRepairShop.Models.DailyOrderSession", b =>
                {
                    b.Navigation("Repairs");
                });

            modelBuilder.Entity("gtMobileDeviceRepairShop.Models.Device", b =>
                {
                    b.Navigation("Repairs");
                });

            modelBuilder.Entity("gtMobileDeviceRepairShop.Models.User", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
